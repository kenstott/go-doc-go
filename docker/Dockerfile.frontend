# Go-Doc-Go Frontend Container
# Multi-stage build for React + TypeScript + Vite frontend

# Build stage
FROM node:18-alpine as builder

# Set working directory
WORKDIR /app

# Install system dependencies for building
RUN apk add --no-cache \
    git \
    python3 \
    make \
    g++

# Copy package files
COPY frontend/package*.json ./

# Install dependencies
RUN npm ci --only=production --silent

# Copy source code
COPY frontend/ .

# Build arguments for environment configuration
ARG REACT_APP_API_URL=http://localhost:8000
ARG REACT_APP_VERSION=1.0.0
ARG NODE_ENV=production

# Set environment variables for build
ENV REACT_APP_API_URL=$REACT_APP_API_URL
ENV REACT_APP_VERSION=$REACT_APP_VERSION
ENV NODE_ENV=$NODE_ENV

# Build the application
RUN npm run build

# Production stage
FROM nginx:1.25-alpine as production

# Install curl for health checks
RUN apk add --no-cache curl

# Copy custom nginx configuration
COPY docker/nginx.conf /etc/nginx/nginx.conf

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Create nginx user and set permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid

# Switch to non-root user
USER nginx

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:80/ || exit 1

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]

# Development stage - for hot reloading
FROM node:18-alpine as development

WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    git \
    python3 \
    make \
    g++

# Copy package files
COPY frontend/package*.json ./

# Install all dependencies (including dev dependencies)
RUN npm install --silent

# Copy source code
COPY frontend/ .

# Expose Vite dev server port
EXPOSE 5173

# Start development server with hot reloading
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "5173"]